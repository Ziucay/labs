name: Build, lint and test python app, then push docker image to github

on: [ push ]

permissions:
  contents: read
  security-events: write

jobs:

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: app_python/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f app_python/requirements.txt ]; then pip install -r app_python/requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: app_python/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f app_python/requirements.txt ]; then pip install -r app_python/requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest

  snyk:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: app_python/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f app_python/requirements.txt ]; then pip install -r app_python/requirements.txt; fi
      - uses: snyk/actions/setup@master
      - name: run Snyk test
        run: snyk test --sarif-file-output=snyk.sarif
        working-directory: app_python
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: app_python/snyk.sarif

  docker:
    needs: [lint, test, snyk]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [ "3.10" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: app_python/requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f app_python/requirements.txt ]; then pip install -r app_python/requirements.txt; fi
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app_python
          file: ./app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pythonapp:latest